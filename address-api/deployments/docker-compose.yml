version: "3.8"

services:
  address-api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - environment=DEV
    ports:
      - "3048:3048"
    depends_on:
      - postgresql

  postgresql:
    image: postgres:12-alpine
    container_name: api_postgresql
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=pg
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=address_db
    volumes:
      - db:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  prometheus:
    container_name: prometheus_container
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - "9000:9090"
    volumes:
      - ./prometheus:/etc/monitoring
      - prometheus-data:/monitoring
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml  # If you use --web.enable-lifecycle you can reload configuration files (e.g. rules) without restarting Prometheus:

  grafana:
    container_name: grafana_container
    image: grafana/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources # data source configuration
      - grafana-data:/var/lib/grafana # used to save dashboards

volumes:
  db:
  elasticsearch-data:
  prometheus-data:
  grafana-data:
  alertmanager-data: