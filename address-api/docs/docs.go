// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/addresses": {
            "get": {
                "description": "Get all addresses with pagination",
                "tags": [
                    "addresses"
                ],
                "summary": "Get all addresses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AddressResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new address entry",
                "tags": [
                    "addresses"
                ],
                "summary": "Create a new address",
                "parameters": [
                    {
                        "description": "Address creation payload",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddressCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.AddressResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/addresses/{id}": {
            "get": {
                "description": "Retrieve an address by its ID",
                "tags": [
                    "addresses"
                ],
                "summary": "Get an address by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddressResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an address by its ID",
                "tags": [
                    "addresses"
                ],
                "summary": "Update an address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address update payload",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddressUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddressResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an address by its ID",
                "tags": [
                    "addresses"
                ],
                "summary": "Delete an address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Patch (partial update) an address by its ID",
                "tags": [
                    "addresses"
                ],
                "summary": "Patch an address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address patch payload",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddressPatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddressResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/addresses": {
            "get": {
                "description": "Get all addresses with pagination",
                "tags": [
                    "addresses"
                ],
                "summary": "Get all addresses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AddressResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.AddressCreateRequest": {
            "type": "object",
            "required": [
                "city",
                "country",
                "fullAddress",
                "userId"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "country": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "fullAddress": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 10
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "request.AddressPatchRequest": {
            "type": "object",
            "properties": {
                "doc": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.PatchRequest"
                    }
                }
            }
        },
        "request.AddressUpdateRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "country": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "fullAddress": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 10
                },
                "id": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "request.PatchRequest": {
            "type": "object",
            "properties": {
                "op": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "response.AddressResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "fullAddress": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3048",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Address API",
	Description:      "This is an Address API for Swagger documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
